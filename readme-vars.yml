---

# project information
project_name: lychee
project_url: "https://lycheeorg.github.io/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely."

  ### UPGRADE WARNING

  Please note that the v4 upgrade process resets ALL password-protected albums. Any albums that were made public with a password will need to be re-secured.
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/config", desc: "Contains all relevant configuration files." }
  - { vol_path: "/pictures", vol_host_path: "/path/to/pictures", desc: "Where lychee will store uploaded data." }
param_usage_include_ports: true
param_ports:
  - { external_port: "80", internal_port: "80", port_desc: "http gui" }
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London"}
  - { env_var: "DB_HOST", env_value: "mariadb", desc: "for specifying the database host" }
  - { env_var: "DB_PORT", env_value: "3306", desc: "for specifying the database port" }
  - { env_var: "DB_USERNAME", env_value: "lychee", desc: "for specifying the database user" }
  - { env_var: "DB_PASSWORD", env_value: "dbpassword", desc: "for specifying the database password" }
  - { env_var: "DB_DATABASE", env_value: "lychee", desc: "for specifying the database to be used" }

# optional parameters
optional_block_1: false
optional_block_1_items: ""

custom_compose: |
  version: "3"
  services:
    mariadb:
      image: lscr.io/linuxserver/mariadb:latest
      container_name: lychee_mariadb
      restart: always
      volumes:
        - /path/to/mariadb/data:/config
      environment:
        - MYSQL_ROOT_PASSWORD=rootpassword
        - MYSQL_DATABASE=lychee
        - MYSQL_USER=lychee
        - MYSQL_PASSWORD=dbpassword
        - PGID=1000
        - PUID=1000
        - TZ=Europe/London
    lychee:
      image: lscr.io/linuxserver/lychee:latest
      container_name: lychee
      restart: always
      depends_on:
        - mariadb
      volumes:
        - /path/to/config:/config
        - /path/to/pictures:/pictures
      environment:
        - DB_HOST=mariadb
        - DB_USERNAME=lychee
        - DB_PASSWORD=dbpassword
        - DB_DATABASE=lychee
        - DB_PORT=3306
        - PGID=1000
        - PUID=1000
        - TZ=Europe/London
      ports:
        - 80:80

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  **This image will not work with a prefilled `/pictures` mount, lychee wants total control over this folder**

  Setup mysql/mariadb and account via the webui, accessible at http://SERVERIP:PORT
  More info at [lychee]({{ project_url }}).

  ## Customization

  In certain scenarios, you might need to change the default settings of Lychee. For instance, if you encounter limitations when uploading large files, you can increase this limit.

  ### Increasing Upload Limit

  The upload limit is defined in the `user.ini` file located in the config directory (`/config`). You can increase this limit by modifying the following values:

  ```ini
  post_max_size = 500M
  upload_max_filesize = 500M
  ```

  After making these changes, you'll need to restart the Docker container for the changes to take effect. Here's how to do it:

  **Please note that these changes might have implications on your server's performance, depending on its available resources. Thus, it's recommended to modify these settings with caution.**

# changelog
changelogs:
  - { date: "13.04.23:", desc: "Move ssl.conf include to default.conf." }
  - { date: "11.01.23:", desc: "Rebasing to alpine 3.17 with php8.1. Restructure nginx configs ([see changes announcement](https://info.linuxserver.io/issues/2022-08-20-nginx-base)). Switch to git clone as builds fail with the release artifact." }
  - { date: "13.05.21:", desc: "Make readme clearer." }
  - { date: "18.04.21:", desc: "Add php-intl for v4.3." }
  - { date: "31.01.21:", desc: "Add jpegoptim." }
  - { date: "15.01.21:", desc: "Rebase to alpine 3.13, add php7-ctype." }
  - { date: "10.07.20:", desc: "Upgrade to Lychee v4 and rebased to alpine 3.12." }
  - { date: "19.12.19:", desc: "Rebasing to alpine 3.11." }
  - { date: "23.10.19:", desc: "Increase fastcgi timeouts (existing users need to manually update)." }
  - { date: "19.09.19:", desc: "Update project website url." }
  - { date: "28.06.19:", desc: "Rebasing to alpine 3.10." }
  - { date: "05.05.19:", desc: "Rebase to alpine 3.9, use new armv7 image format." }
  - { date: "21.01.18:", desc: "Added ffmpeg for video thumbnail creation, switched to installing zip release instead of source tarball, created small thumbnails folder, switched to dynamic readme." }
  - { date: "14.01.19:", desc: "Adding pipeline logic and multi arch.." }
  - { date: "04.09.18:", desc: "Rebase to alpine 3.8, switch to LycheeOrg repository." }
  - { date: "08.01.18:", desc: "Rebase to alpine 3.7." }
  - { date: "25.05.17:", desc: "Rebase to alpine 3.6." }
  - { date: "03.05.17:", desc: "Use repo pinning to better solve dependencies, use repo version of php7-imagick." }
  - { date: "12.02.17:", desc: "Initial Release." }
